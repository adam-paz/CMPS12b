head	1.25;
access;
symbols;
locks;
comment	@# @;


1.25
date	2015.01.30.00.54.53;	author -;	state -;
branches;
next	1.24;

1.24
date	2015.01.29.20.32.25;	author -;	state -;
branches;
next	1.23;

1.23
date	2015.01.29.20.30.12;	author -;	state -;
branches;
next	1.22;

1.22
date	2015.01.29.20.11.42;	author -;	state -;
branches;
next	1.21;

1.21
date	2015.01.29.20.08.13;	author -;	state -;
branches;
next	1.20;

1.20
date	2015.01.29.20.07.26;	author -;	state -;
branches;
next	1.19;

1.19
date	2015.01.29.20.07.16;	author -;	state -;
branches;
next	1.18;

1.18
date	2015.01.29.20.07.00;	author -;	state -;
branches;
next	1.17;

1.17
date	2015.01.29.20.06.30;	author -;	state -;
branches;
next	1.16;

1.16
date	2015.01.29.19.21.58;	author -;	state -;
branches;
next	1.15;

1.15
date	2015.01.29.19.09.57;	author -;	state -;
branches;
next	1.14;

1.14
date	2015.01.29.19.08.37;	author -;	state -;
branches;
next	1.13;

1.13
date	2015.01.29.18.59.50;	author -;	state -;
branches;
next	1.12;

1.12
date	2015.01.29.18.56.36;	author -;	state -;
branches;
next	1.11;

1.11
date	2015.01.29.18.49.45;	author -;	state -;
branches;
next	1.10;

1.10
date	2015.01.29.18.26.17;	author -;	state -;
branches;
next	1.9;

1.9
date	2015.01.29.18.13.43;	author -;	state -;
branches;
next	1.8;

1.8
date	2015.01.29.04.12.52;	author -;	state -;
branches;
next	1.7;

1.7
date	2015.01.29.00.07.50;	author -;	state -;
branches;
next	1.6;

1.6
date	2015.01.29.00.07.26;	author -;	state -;
branches;
next	1.5;

1.5
date	2015.01.29.00.03.59;	author -;	state -;
branches;
next	1.4;

1.4
date	2015.01.28.23.39.45;	author -;	state -;
branches;
next	1.3;

1.3
date	2015.01.28.23.38.29;	author -;	state -;
branches;
next	1.2;

1.2
date	2015.01.28.23.26.58;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.01.28.22.51.02;	author -;	state -;
branches;
next	;


desc
@@


1.25
log
@-
@
text
@// $Id: jxref.java,v 1.24 2015-01-29 12:32:25-08 - - $

import java.io.*;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.NoSuchElementException;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import static java.lang.System.*;

class jxref {
   private static final String STDIN_FILENAME = "-";
   private static final String REGEX = "\\w+([-'.:/]\\w+)*";
   private static final Pattern PATTERN = Pattern.compile(REGEX);
   public boolean endFile = false;

   private static void xref_file (String filename, Scanner file){
   //   misc.trace ("filename", filename);
      listmap map = new listmap();
      for (int linenr = 1; file.hasNextLine(); ++linenr) {
         String line = file.nextLine();
     //    misc.trace (filename, linenr, line);
         Matcher match = PATTERN.matcher (line);
         while (match.find()) {
            String word = match.group();
         //   misc.trace ("word", word);
            map.insert(word, linenr);
         }
      }
      for (Entry<String, intqueue> entry: map) {// how this works?
          out.printf("%s ", entry.getKey());
          intqueue Q = entry.getKey();
          int count = Q.getCount();
          out.printf("[%d]", count);
          
          for (Integer integ: entry.getValue())
             out.printf("%d ", integ);
      }
      out.printf("%n");
   }

   // For each filename, open the file, cross reference it,
   // and print.
   private static void xref_filename (String filename) {
      if (filename.equals (STDIN_FILENAME)) {
         xref_file (filename, new Scanner (System.in));
      }else {
         try {
            Scanner file = new Scanner (new File (filename));
            xref_file (filename, file);
            file.close();
         }catch (IOException error) {
            misc.warn (error.getMessage());
         }
      }
   }

   // Main function scans arguments to cross reference files.
   public static void main (String[] args) {
      if (args.length == 0) {
         xref_filename (STDIN_FILENAME);
      }else {
         for (String filename: args) {
            xref_filename (filename);
         }
      }
      exit (misc.exit_status);
   }

}

@


1.24
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.23 2015-01-29 12:30:12-08 - - $
a27 1
         //   FIXME
d32 7
a38 4
//         misc.trace ("STUB", entry,
  //                   entry.getKey(), entry.getValue());
         out.printf("%s:%n",  entry.getKey());
         //FIXME
d40 1
@


1.23
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.22 2015-01-29 12:11:42-08 - - $
d35 1
a35 1
         out.printf("%s: [%d]%n",  entry.getKey(), entry.getCount());
@


1.22
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.21 2015-01-29 12:08:13-08 - - $
d35 1
a35 1
         out.printf("%s%n",  entry.getKey());
a39 1

@


1.21
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.20 2015-01-29 12:07:26-08 - - $
d35 1
a35 1
         out.printf("%s : [%d]",  entry.getKey(), entry.getValue());
@


1.20
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.19 2015-01-29 12:07:16-08 - - $
d35 1
a35 1
         out.printf("%s :",  entry.getKey());//, entry.getValue());
@


1.19
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.18 2015-01-29 12:07:00-08 - - $
d35 1
a35 1
         out.printf("%s :",  entry.getKey())//, entry.getValue());
@


1.18
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.17 2015-01-29 12:06:30-08 - - $
d35 1
a35 1
         out.printf("%s :",  entry.getKey()//, entry.getValue());
@


1.17
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.16 2015-01-29 11:21:58-08 - - $
d35 1
a35 1
         out.printf("%s : [%d]",  entry.getKey(), entry.getValue());
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.15 2015-01-29 11:09:57-08 - - $
d33 3
a35 2
         misc.trace ("STUB", entry,
                     entry.getKey(), entry.getValue());
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.14 2015-01-29 11:08:37-08 - - $
a30 1
         map.count(word, linenr);
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.13 2015-01-29 10:59:50-08 - - $
a29 1
            map.count(word, linenr);
d31 1
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.12 2015-01-29 10:56:36-08 - - $
d30 1
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.11 2015-01-29 10:49:45-08 - - $
a30 2
         endFile = true;
         map.counter(endFile);
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.10 2015-01-29 10:26:17-08 - - $
d16 1
d31 2
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.9 2015-01-29 10:13:43-08 - - $
d32 1
a32 1
         misc.trace ("STUB",// entry,
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.8 2015-01-28 20:12:52-08 - - $
d32 1
a32 1
         misc.trace ("STUB", entry,
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.7 2015-01-28 16:07:50-08 - - $
d32 2
a33 2
     //    misc.trace ("STUB", entry,
      //               entry.getKey(), entry.getValue());
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.6 2015-01-28 16:07:26-08 - - $
d27 1
d31 1
a31 1
      for (Entry<String, intqueue> entry: map) {
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.5 2015-01-28 16:03:59-08 - - $
d31 2
a32 2
         misc.trace ("STUB", entry,
                     entry.getKey(), entry.getValue());
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.4 2015-01-28 15:39:45-08 - - $
d18 1
a18 1
      misc.trace ("filename", filename);
d22 1
a22 1
         misc.trace (filename, linenr, line);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.3 2015-01-28 15:38:29-08 - - $
d26 1
a26 1
            misc.trace ("word", word);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.2 2015-01-28 15:26:58-08 - - $
d27 1
a27 1
            //FIXME
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.1 2015-01-28 14:51:02-08 - - $
a26 1
            map.entry(word, linenr);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.8 2013-10-16 17:10:32-07 - - $
d27 1
@
