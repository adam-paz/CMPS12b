head	1.10;
access;
symbols;
locks;
comment	@# @;


1.10
date	2015.02.03.05.16.22;	author -;	state -;
branches;
next	1.9;

1.9
date	2015.02.03.05.14.36;	author -;	state -;
branches;
next	1.8;

1.8
date	2015.02.03.05.13.18;	author -;	state -;
branches;
next	1.7;

1.7
date	2015.01.30.20.56.04;	author -;	state -;
branches;
next	1.6;

1.6
date	2015.01.30.20.23.28;	author -;	state -;
branches;
next	1.5;

1.5
date	2015.01.30.20.22.14;	author -;	state -;
branches;
next	1.4;

1.4
date	2015.01.30.20.21.30;	author -;	state -;
branches;
next	1.3;

1.3
date	2015.01.30.20.21.11;	author -;	state -;
branches;
next	1.2;

1.2
date	2015.01.30.20.20.39;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.01.30.01.10.48;	author -;	state -;
branches;
next	;


desc
@@


1.10
log
@-
@
text
@//$Id: jxref.java,v 1.9 2015-02-02 21:14:36-08 - - $
//Adam Paz  (apa10@@ucsc.edu)
//Kevin Cai (kcai2@@ucsc.edu)

import java.io.*;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.NoSuchElementException;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import static java.lang.System.*;

class jxref {
   private static final String STDIN_FILENAME = "-";
   private static final String REGEX = "\\w+([-'.:/]\\w+)*";
   private static final Pattern PATTERN = Pattern.compile(REGEX);

   private static void xref_file (String filename, Scanner file){
      listmap map = new listmap();
      out.printf("::::::::::::::::::::::::::::::::%n%s%n" +
           "::::::::::::::::::::::::::::::::%n", filename);
      for (int linenr = 1; file.hasNextLine(); ++linenr) {
         String line = file.nextLine();
         Matcher match = PATTERN.matcher (line);
         while (match.find()) {
            String word = match.group();
            map.insert(word, linenr);
         }
      }
      for (Entry<String, intqueue> entry: map) {
         out.printf("%s ", entry.getKey());
         intqueue queue = entry.getValue();
         int count = queue.getcount();
         out.printf("[%d]", count);
         
         for (Integer integ: entry.getValue()) {
             out.printf(" %d", integ);
         
         }
         out.printf("%n");
      }
   }


   // For each filename, open the file, cross reference it,
   // and print.
   private static void xref_filename (String filename) {
      if (filename.equals (STDIN_FILENAME)) {
         xref_file (filename, new Scanner (System.in));
      }else {
         try {
            Scanner file = new Scanner (new File (filename));
            xref_file (filename, file);
            file.close();
         }catch (IOException error) {
            misc.warn (error.getMessage());
         }
      }
   }

   // Main function scans arguments to cross reference files.
   public static void main (String[] args) {
      if (args.length == 0) {
         xref_filename (STDIN_FILENAME);
      }else {
         for (String filename: args) {
            xref_filename (filename);
         }
      }
      exit (misc.exit_status);
   }

}
@


1.9
log
@-
@
text
@d1 1
a1 1
//$Id: jxref.java,v 1.8 2015-02-02 21:13:18-08 - - $
d35 1
a35 1
         out.printf("[%d] ", count);
@


1.8
log
@-
@
text
@d1 1
a1 1
//$Id: jxref.java,v 1.7 2015-01-30 12:56:04-08 - - $
d32 1
a32 1
         out.printf("%s: ", entry.getKey());
@


1.7
log
@-
@
text
@d1 1
a1 1
//$Id$
d33 2
a34 2
         intqueue Q = entry.getValue();
         int count = Q.getcount();
d38 1
a38 2
             out.printf("%d ", integ);
            
@


1.6
log
@-
@
text
@d1 3
a3 1
// $Id: jxref.java,v 1.5 2015-01-30 12:22:14-08 - - $
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.4 2015-01-30 12:21:30-08 - - $
d19 2
a20 1
      out.printf("::::::::::::::::%n%s%n::::::::::::::::%n", filename);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.3 2015-01-30 12:21:11-08 - - $
d19 1
a19 1
      out.printf(":::::::::::::::%n%s%n::::::::::::::::%n", filename);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.2 2015-01-30 12:20:39-08 - - $
d19 1
a19 1
      out.printf(":::::::::::::::%n%s%n::::::::::::::::", filename);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.1 2015-01-29 17:10:48-08 - - $
d19 1
a19 1
      out.printf(":::::::::::::::%n%s%n::::::::::::::::");
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: jxref.java,v 1.1 2015-01-29 17:00:46-08 - - $
a17 1
      //misc.trace ("filename", filename);
d19 1
a21 1
         //misc.trace (filename, linenr, line);
a24 2
            //misc.trace ("word", word);
            //FIXME
a39 4
    //     misc.trace ("STUB", entry,
      //               entry.getKey(), entry.getValue());
         
         //FIXME
@
